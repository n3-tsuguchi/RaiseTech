AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates a network layer including VPC, subnets, internet gateway,
  route tables, security groups, and VPC endpoints.

Parameters:
  CIDRIP:
    Type: String
    Description: The CIDR IP for MyIP
  Prefix:
    Type: String
    Description: The prefix name of the RaiseTech
  AWSManagedPolicyParameter01:
    Type: String
    Description: ARN of IAM Managed Policy to add to the role
    Default: arn:aws:iam::aws:policy/AmazonS3FullAccess
  S3BucketName:
    Type: String
    Description: Name for the S3 bucket
    MinLength: 3
    Default: raise-tech-s3-bucket
  EC2InstanceAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"


Resources:
  RaiseTechVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: RaiseTechVPC

  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RaiseTechVPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1a
      Tags:
        - Key: Name
          Value: PublicSubnet1a

  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RaiseTechVPC
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1c
      Tags:
        - Key: Name
          Value: PublicSubnet1c

  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RaiseTechVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet1a

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref RaiseTechVPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RaiseTechVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RaiseTechVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PublicRouteTableAssociation1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1a

  PrivateRouteTableAssociation1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1a

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway

  VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: com.amazonaws.ap-northeast-1.s3
      VpcEndpointType: Gateway
      VpcId: !Ref RaiseTechVPC

  RoutePublicSubnet:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RaiseTechVPC
      Tags:
        - Key: Name
          Value: rt-PublicSubnet

  RoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RoutePublicSubnet
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroupEC2
      GroupName: SecurityGroupEC2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref SecurityGroupALB
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CIDRIP
      VpcId: !Ref RaiseTechVPC
      Tags:
        - Key: Name
          Value: SecurityGroupEC2



  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroupRDS
      GroupName: SecurityGroupRDS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref SecurityGroupEC2
      VpcId: !Ref RaiseTechVPC
      Tags:
        - Key: Name
          Value: SecurityGroupRDS



  SecurityGroupALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroupALB
      GroupName: SecurityGroupALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CIDRIP
      VpcId: !Ref RaiseTechVPC
      Tags:
        - Key: Name
          Value: SecurityGroupALB

  RootRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref AWSManagedPolicyParameter01

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref RootRole

  RaiseTechEC21a:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet1a
          GroupSet:
            - !Ref SecurityGroupEC2
          DeviceIndex: 0
      InstanceType: t2.micro
      ImageId: !Ref EC2InstanceAMI
      IamInstanceProfile: !Ref IamInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}EC21a
      KeyName: RaiseTech


  RaiseTechEC21c:
    Type: AWS::EC2::Instance
    Properties:
      NetworkInterfaces:
        - SubnetId: !Ref PublicSubnet1a
          GroupSet:
            - !Ref SecurityGroupEC2
          DeviceIndex: 0
      InstanceType: t2.micro
      ImageId: !Ref EC2InstanceAMI
      IamInstanceProfile: !Ref IamInstanceProfile
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}EC21c
      KeyName: RaiseTech



  RDSMasterUserSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
       Name: "RDSMasterUserSecret"
       Description: "Secret for RDS Master User"
       GenerateSecretString:
         SecretStringTemplate: '{"username":"admin"}'
         GenerateStringKey: "password"
         PasswordLength: 16
         ExcludeCharacters: '"@/\'

  RaiseTechRDS:
     Type: AWS::RDS::DBInstance
     Properties:
       AllocatedStorage: 20
       DBInstanceClass: db.t2.micro
       Port: 3306
       StorageType: gp2
       BackupRetentionPeriod: 7
       MasterUsername: admin
       MasterUserPassword: '{{resolve:secretsmanager:RDSMasterUserSecret:SecretString:password}}'
       DBInstanceIdentifier: RaiseTech-DB
       DBName: RaiseTechRDS
       Engine: mysql
       EngineVersion: 8.0
       DBSubnetGroupName: !Ref RaiseTechRDSSubnetGroup
       MultiAZ: true
      

  RaiseTechRDSSubnetGroup:
     Type: AWS::RDS::DBSubnetGroup
     Properties:
       DBSubnetGroupDescription: "RaiseTechDBSubnetGroup"
       DBSubnetGroupName: RaiseTechRDSSubnetGroup
       SubnetIds:
         - !Ref PrivateSubnet1a

  RaiseTechALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: RaiseTechALB
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SecurityGroupALB
      Subnets:
        - !Ref PublicSubnet1a
        - !Ref PublicSubnet1c
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}ALB

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ALBTargetGroup
      Port: 80
      Protocol: HTTP
      Targets:
        - Id:
            Ref: RaiseTechEC21a
          Port: 80
        - Id:
            Ref: RaiseTechEC21c
          Port: 80
      VpcId: !Ref RaiseTechVPC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            !Ref ALBTargetGroup
      LoadBalancerArn:
        !Ref RaiseTechALB
      Port: 80
      Protocol: HTTP


  RaiseTechS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled


  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RaiseTechS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - s3:GetObject
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}/*"
              - !Sub "arn:aws:s3:::${S3BucketName}"



Outputs:
  RaiseTechVPC:
    Value: !Ref RaiseTechVPC
    Export:
      Name: RaiseTechVPC-VPCID

  PublicSubnet1a:
    Value: !Ref PublicSubnet1a
    Export:
      Name: PublicSubnet1a-SubnetID

  PrivateSubnet1a:
    Value: !Ref PrivateSubnet1a
    Export:
      Name: PrivateSubnet1a-SubnetID

  SecurityGroupEC2:
    Value: !Ref SecurityGroupEC2
    Export:
      Name: SGID-EC2

  SecurityGroupRDS:
    Value: !Ref SecurityGroupRDS
    Export:
      Name: SGID-RDS

  SecurityGroupALB:
    Value: !Ref SecurityGroupALB
    Export:
      Name: SGID-ALB
