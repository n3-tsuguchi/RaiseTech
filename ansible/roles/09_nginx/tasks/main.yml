- name: Check if Nginx is installed
  ansible.builtin.command: nginx -v
  register: check_nginx_installed
  changed_when: false
  ignore_errors: true

- name: Install Nginx
  become: true
  ansible.builtin.shell: amazon-linux-extras install -y nginx1
  when: check_nginx_installed.rc != 0

- name: Create rails.conf
  become: true
  ansible.builtin.template:
    src: rails.conf.j2
    dest: "/etc/nginx/conf.d/rails.conf"
  notify:
    - Restart Nginx

- name: Start Nginx
  become: true
  ansible.builtin.systemd:
    name: nginx
    state: started
  when: check_nginx_installed.rc == 0 and (start_nginx is undefined or start_nginx.changed)

- name: Reload Nginx configuration
  ansible.builtin.systemd:
    name: nginx
    state: reloaded
  become: true
  when: rails_conf_changed is defined

- name: Check Nginx configuration
  ansible.builtin.command: nginx -t
  become: true
  register: nginx_check
  ignore_errors: true

- name: Restart Nginx if configuration is OK
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  become: true
  when: nginx_check.stdout is search('configuration file /etc/nginx/nginx.conf test is successful')
  notify:
    - Restart Nginx

- name: Start puma.service using systemd_service module
  ansible.builtin.service:
    name: puma.service
    state: started
    enabled: yes
    daemon_reload: yes

- name: Restart puma.service
  ansible.builtin.service:
    name: puma.service
    state: restarted
    daemon_reload: yes
    enabled: yes
