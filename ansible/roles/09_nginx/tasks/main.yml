- name: Check if Nginx is installed
  command: nginx -v
  register: check_nginx_installed
  changed_when: false
  ignore_errors: true

- name: Install Nginx
  become: true
  shell: amazon-linux-extras install -y nginx1
  when: check_nginx_installed.rc != 0

- name: Create rails.conf
  become: true
  template:
    src: rails.conf.j2
    dest: "/etc/nginx/conf.d/rails.conf"
  notify:
    - Restart Nginx

- name: Start Nginx
  become: true
  systemd:
    name: nginx
    state: started
  when: check_nginx_installed.rc == 0 and (start_nginx is undefined or start_nginx.changed)

- name: Reload Nginx configuration
  systemd:
    name: nginx
    state: reloaded
  become: true
  when: rails_conf_changed is defined

- name: Check Nginx configuration
  command: nginx -t
  become: true
  register: nginx_check
  ignore_errors: true

- name: Restart Nginx if configuration is OK
  systemd:
    name: nginx
    state: restarted
  become: true
  when: nginx_check.stdout is search('configuration file /etc/nginx/nginx.conf test is successful')
  notify:
    - Restart Nginx

- name: Check if puma.service.sample exists
  stat:
    path: /home/ec2-user/raisetech-live8-sample-app/samples/puma.service.sample
  register: puma_service_check

- name: Move puma.service
  become_user: root
  command: mv /home/ec2-user/raisetech-live8-sample-app/samples/puma.service.sample /etc/systemd/system/puma.service
  when: puma_service_check.stat.exists

- name: Ensure config directory exists
  file:
    path: /home/ec2-user/raisetech-live8-sample-app/config
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: '0755'

- name: Generate puma.rb from template
  template:
    src: roles/08_app/templates/puma.rb.j2
    dest: /home/ec2-user/raisetech-live8-sample-app/config/puma.rb

- name: Ensure rbenv is initialized
  shell: |
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
  args:
    executable: /bin/bash

- name: Check Bundler version
  command: bash -lc "export PATH=/usr/local/rbenv/shims:$PATH; eval \"$(rbenv init -)\"; bundler -v"
  register: bundler_version_check
  ignore_errors: true

- name: Set Bundler install condition
  set_fact:
    install_bundler: "{{ 'yes' if (bundler_version_check.stdout is not defined) or ('Bundler version 2.3.14' not in bundler_version_check.stdout) else 'no' }}"

- name: Install specific version of Bundler
  command: bash -lc 'export PATH="/usr/local/rbenv/shims:$PATH:/usr/local/rbenv/bin"; /usr/local/rbenv/shims/gem install bundler -v 2.3.14'
  environment:
    PATH: "/usr/local/rbenv/shims:/usr/local/rbenv/bin:{{ ansible_env.PATH }}"
  become: yes
  become_user: ec2-user
  when: install_bundler == 'yes'

- name: Install Bundler
  shell: bash -lc "gem install bundler"
  become: yes
  become_user: ec2-user
  when: install_bundler == 'yes'

- name: Install gems
  shell: bash -lc "bundle install"
  become: yes
  become_user: ec2-user
  args:
    chdir: "/home/ec2-user/raisetech-live8-sample-app/"
  when: install_bundler == 'yes'

- name: Check if bin/setup exists
  stat:
    path: /home/ec2-user/raisetech-live8-sample-app/bin/setup
  register: setup_script_check

- name: Run bin/setup
  command: /home/ec2-user/.rbenv/shims/ruby bin/setup
  args:
    chdir: /home/ec2-user/raisetech-live8-sample-app/
  when: setup_script_check.stat.exists

- name: Reload systemd to read new unit files
  become: yes
  command: systemctl daemon-reload

- name: Enable and start Puma service
  become: yes
  systemd:
    name: puma
    enabled: yes
    state: started
