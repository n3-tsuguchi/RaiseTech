- name: Check if Nginx is installed
  ansible.builtin.command: nginx -v
  register: check_nginx_installed
  changed_when: false
  ignore_errors: true

- name: Install Nginx if not installed
  ansible.builtin.shell: amazon-linux-extras install -y nginx1
  when: check_nginx_installed.rc != 0

- name: Create rails.conf for Nginx
  ansible.builtin.template:
    src: rails.conf.j2
    dest: "/etc/nginx/conf.d/rails.conf"
  notify:
    - Restart Nginx

- name: Start or reload Nginx
  ansible.builtin.systemd:
    name: nginx
    state: started
  when: check_nginx_installed.rc == 0

- name: Check Nginx configuration
  ansible.builtin.command: nginx -t
  register: nginx_check
  ignore_errors: true

- name: Restart Nginx if configuration is OK
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: nginx_check.stdout is search('configuration file /etc/nginx/nginx.conf test is successful')

- name: Add rbenv path to .bash_profile
  ansible.builtin.lineinfile:
    path: /home/ec2-user/.bash_profile
    line: 'export PATH="$HOME/.rbenv/bin:$PATH"'
    create: yes
  become_user: ec2-user

- name: Add rbenv init to .bash_profile
  ansible.builtin.lineinfile:
    path: /home/ec2-user/.bash_profile
    line: 'eval "$(rbenv init -)"'
    create: yes
  become_user: ec2-user

- name: Check if puma.service.sample exists
  ansible.builtin.stat:
    path: /home/ec2-user/raisetech-live8-sample-app/puma.service
  register: puma_service_check

- name: Move puma.service
  ansible.builtin.command: mv /home/ec2-user/raisetech-live8-sample-app/puma.service /etc/systemd/system/puma.service
  when: puma_service_check.stat.exists

- name: Check if puma.rb exists
  ansible.builtin.stat:
    path: /home/ec2-user/raisetech-live8-sample-app/config/puma.rb
  register: puma_check

- name: Generate puma.rb from template
  ansible.builtin.template:
    src: roles/08_app/templates/puma.rb.j2
    dest: /home/ec2-user/raisetech-live8-sample-app/config/puma.rb

- name: Install Bundler
  ansible.builtin.shell: bash -lc "gem install bundler"
  args:
    chdir: /home/ec2-user/raisetech-live8-sample-app/
  become_user: ec2-user

- name: Create tmp/sockets directory
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/tmp/sockets
    state: directory

- name: Create tmp/pids directory
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/tmp/pids
    state: directory

- name: Ensure log file exists and is writable
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/log/development.log
    state: touch
    mode: '0664'
  become_user: ec2-user

- name: Check if database.yml.sample exists
  ansible.builtin.stat:
    path: /home/ec2-user/raisetech-live8-sample-app/config/database.yml.sample
  register: file_check

- name: Rename database.yml.sample
  ansible.builtin.command: mv /home/ec2-user/raisetech-live8-sample-app/config/database.yml.sample /home/ec2-user/raisetech-live8-sample-app/config/database.yml
  when: file_check.stat.exists

- name: Render database.yml from template
  ansible.builtin.template:
    src: database.yml.j2
    dest: /home/ec2-user/raisetech-live8-sample-app/config/database.yml

- name: Start Puma service
  ansible.builtin.systemd:
    name: puma
    state: started