- name: check rbenv install
  ansible.builtin.command: bash -lc "rbenv --version"
  register: rbenv_exists
  changed_when: no
  ignore_errors: true

- name: Install rbenv
  ansible.builtin.git:
    repo: https://github.com/sstephenson/rbenv.git
    dest: /home/ec2-user/.rbenv
  when: rbenv_exists is failed

- name: Add rbenv to PATH
  ansible.builtin.lineinfile:
    path: /home/ec2-user/.bashrc
    regexp: 'export PATH=/home/ec2-user/.rbenv/bin:$PATH'
    line: 'export PATH=/home/ec2-user/.rbenv/bin:$PATH'
    state: present
  when: rbenv_exists is failed

- name: Initialize rbenv
  ansible.builtin.lineinfile:
    path: /home/ec2-user/.bashrc
    regexp: 'eval "$(rbenv init -)"'
    line: 'eval "$(rbenv init -)"'
    state: present
  when: rbenv_exists is failed

- name: source /home/ec2-user/.bashrc 
  ansible.builtin.command: bash -lc "source /home/ec2-user/.bashrc" 
  changed_when: false

- name: check ruby install
  ansible.builtin.command: bash -lc "rbenv version | grep {{ ruby_version }}"
  register: ruby_exists
  changed_when: false
  ignore_errors: true

- name: Install ruby-build
  ansible.builtin.git:
    repo: https://github.com/sstephenson/ruby-build.git
    dest: /home/ec2-user/.rbenv/plugins/ruby-build
  when: ruby_exists is failed

- name: Run ruby-build install script
  become: true
  ansible.builtin.command: bash -lc "/home/ec2-user/.rbenv/plugins/ruby-build/install.sh"
  when: ruby_exists is failed

- name: Install ruby
  ansible.builtin.command: bash -lc "rbenv install {{ ruby_version }} --skip-existing"
  when: ruby_exists is failed
  timeout: 900

- name: Set ruby global version
  ansible.builtin.command: bash -lc "rbenv global {{ ruby_version }}"
  when: ruby_exists is failed