---
- hosts: web_server
  remote_user: ec2-user
  become: yes

- name: Setup Ruby environment and install gems
  hosts: all
  become: yes
  tasks:
    - name: Check if apt-get is available
      command: which apt-get
      register: apt_get_path
      ignore_errors: true

    - name: Update apt cache if apt-get is available
      apt:
        update_cache: yes
      when: apt_get_path.rc == 0

    - name: Install dependencies for rbenv using apt
      apt:
        name: 
          - git
          - build-essential
          - libssl-dev
          - libreadline-dev
          - zlib1g-dev
        state: present
      when: apt_get_path.rc == 0

    - name: Clone rbenv repository
      git:
        repo: 'https://github.com/rbenv/rbenv.git'
        dest: /usr/local/rbenv
        version: master
        force: yes

    - name: Clone ruby-build repository
      git:
        repo: 'https://github.com/rbenv/ruby-build.git'
        dest: /usr/local/rbenv/plugins/ruby-build
        version: master
        force: yes

    - name: Add rbenv to PATH
      lineinfile:
        path: /etc/profile.d/rbenv.sh
        line: 'export PATH="/usr/local/rbenv/bin:$PATH"'
        create: yes
        state: present

    - name: Initialize rbenv
      lineinfile:
        path: /etc/profile.d/rbenv.sh
        line: 'eval "$(rbenv init -)"'
        create: yes
        state: present

    - name: Ensure profile.d scripts are executable
      file:
        path: /etc/profile.d/rbenv.sh
        mode: '0755'
        state: file

    - name: Install Ruby 3.2.3 using rbenv
      command: bash -lc 'rbenv install 3.2.3 --skip-existing'
      environment:
        PATH: "/usr/local/rbenv/bin:{{ ansible_env.PATH }}"

    - name: Set Ruby 3.2.3 as global default
      command: bash -lc 'rbenv global 3.2.3'
      environment:
        PATH: "/usr/local/rbenv/bin:{{ ansible_env.PATH }}"

    - name: Rehash rbenv
      command: bash -lc 'rbenv rehash'
      environment:
        PATH: "/usr/local/rbenv/bin:{{ ansible_env.PATH }}"

    - name: Install Rails and Unicorn gems
      gem:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
        executable: /usr/local/rbenv/shims/gem
        user_install: no
      loop:
        - { name: 'rails', version: '7.1.3.2' }
        - { name: 'unicorn', version: '6.0.0' }
      environment:
        PATH: "/usr/local/rbenv/shims:/usr/local/rbenv/bin:{{ ansible_env.PATH }}"

  roles:
    - { role: 01_yum, tags: yum }
    - { role: 02_ruby, tags: ruby }
    - { role: 03_bundler, tags: bundler }
    - { role: 04_rails, tags: rails }
    - { role: 05_node, tags: node }
    - { role: 06_yarn, tags: yarn }
    - { role: 07_mysql, tags: mysql }
    - { role: 08_app, tags: app }
    - { role: 09_nginx, tags: nginx }

  vars:
    ansible_become_method: sudo
    ruby_version: 3.1.2
    bundler_version: 2.3.14
    rails_version: 7.1.3.2
    sample_app_dir: /var/www/raisetech-live8-sample-app
    aws_alb_host : "{{ (lookup('env','AWS_ALB_HOST')) }}"
    aws_ec2_host : "{{ (lookup('env','AWS_EC2_HOST')) }}"
    aws_db_user: "{{ (lookup('env','AWS_DB_USER')) }}"
    aws_db_pw : "{{ (lookup('env','AWS_DB_PW')) }}"
    aws_db_host : "{{ (lookup('env','AWS_DB_HOST')) }}"
    aws_s3_bucket: "{{ (lookup('env','AWS_S3_BUCKET')) }}"